"""empty message

Revision ID: 65571d93e7e3
Create Date: 2025-04-08 15:21:35.790344

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "65571d93e7e3"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "schedules",
        sa.Column("doctor_id", sa.String(length=50), nullable=False),
        sa.Column("specialization_id", sa.Integer(), nullable=False),
        sa.Column("schedule_name", sa.String(length=20), nullable=False),
        sa.Column("appointment_interval", sa.Integer(), nullable=False),
        sa.Column("period_start", sa.Date(), nullable=False),
        sa.Column("period_end", sa.Date(), nullable=False),
        sa.Column(
            "patient_type",
            sa.Enum("ADULT", "CHILD", name="schedulepatienttypeenum"),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column(
            "referral_types",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default='{"with_referral": true, "without_referral": true}',
            nullable=False,
        ),
        sa.Column(
            "referral_origins",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default='{"from_external_organization": true, "self_registration": true}',
            nullable=False,
        ),
        sa.Column(
            "payment_types",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default='{"GOBMP": true, "DMS": true, "OSMS": true, "Paid": true}',
            nullable=False,
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "changed_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_schedules")),
    )
    op.create_table(
        "appointments",
        sa.Column("schedule_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("appointment_date", sa.Date(), nullable=False),
        sa.Column("appointment_time", sa.Time(), nullable=False),
        sa.Column("patient_id", sa.String(length=50), nullable=False),
        sa.Column(
            "status",
            sa.Enum("FREE", "BOOKED", "CANCELLED", name="appointmentstatusenum"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "changed_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["schedule_id"],
            ["schedules.id"],
            name=op.f("fk_appointments_schedule_id_schedules"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_appointments")),
    )
    op.create_table(
        "schedule_days",
        sa.Column("schedule_id", sa.UUID(), nullable=False),
        sa.Column("day_of_week", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("work_start_time", sa.Time(), nullable=True),
        sa.Column("work_end_time", sa.Time(), nullable=True),
        sa.Column("break_start_time", sa.Time(), nullable=True),
        sa.Column("break_end_time", sa.Time(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "changed_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.CheckConstraint(
            "day_of_week BETWEEN 1 AND 7",
            name=op.f("ck_schedule_days_ck_schedule_days_day_of_week"),
        ),
        sa.ForeignKeyConstraint(
            ["schedule_id"],
            ["schedules.id"],
            name=op.f("fk_schedule_days_schedule_id_schedules"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_schedule_days")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("schedule_days")
    op.drop_table("appointments")
    op.drop_table("schedules")
    # ### end Alembic commands ###
