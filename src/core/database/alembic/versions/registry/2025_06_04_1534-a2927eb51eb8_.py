"""empty message

Revision ID: a2927eb51eb8
Revises: c9681993ff3a
Create Date: 2025-06-04 15:34:53.126380

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "a2927eb51eb8"
down_revision: Union[str, None] = "c9681993ff3a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "platform_rules",
        sa.Column("rule_data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    )
    op.add_column(
        "platform_rules",
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.add_column(
        "platform_rules",
        sa.Column(
            "changed_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.drop_constraint("uq_platform_rules_key", "platform_rules", type_="unique")
    op.drop_column("platform_rules", "value")
    op.drop_column("platform_rules", "key")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "platform_rules",
        sa.Column("key", sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    )
    op.add_column(
        "platform_rules",
        sa.Column("value", sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    )
    op.create_unique_constraint("uq_platform_rules_key", "platform_rules", ["key"])
    op.drop_column("platform_rules", "changed_at")
    op.drop_column("platform_rules", "created_at")
    op.drop_column("platform_rules", "rule_data")
    # ### end Alembic commands ###
