"""init

Revision ID: e9d6f8ab5b30
Revises: 
Create Date: 2025-07-19 17:44:12.632507

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e9d6f8ab5b30'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cat_citizenship',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('country_code', sa.String(length=10), nullable=False, comment='Citizenship country code (ISO)'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Citizenship default name'),
    sa.Column('lang', sa.String(length=5), nullable=False, comment='Citizenship default language'),
    sa.Column('name_locales', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment="Citizenship's name additional locales"),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cat_citizenship')),
    sa.UniqueConstraint('country_code', name=op.f('uq_cat_citizenship_country_code'))
    )
    op.create_table('cat_diagnoses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('diagnosis_code', sa.String(length=20), nullable=False, comment='Diagnosis code'),
    sa.Column('description', sa.String(length=256), nullable=True, comment='Diagnosis description'),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cat_diagnoses')),
    sa.UniqueConstraint('diagnosis_code', name=op.f('uq_cat_diagnoses_diagnosis_code'))
    )
    op.create_table('cat_financing_sources',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Financing source default name'),
    sa.Column('code', sa.String(length=20), nullable=False, comment='Financing source code'),
    sa.Column('lang', sa.String(length=5), nullable=False, comment='Financing source default language'),
    sa.Column('name_locales', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment="Financing source's name additional locales"),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cat_financing_sources')),
    sa.UniqueConstraint('code', name=op.f('uq_cat_financing_sources_code')),
    sa.UniqueConstraint('name', name=op.f('uq_cat_financing_sources_name'))
    )
    op.create_table('cat_medical_organizations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False, comment='Medical organization internal code'),
    sa.Column('name', sa.String(length=256), nullable=False, comment='Medical organization default name'),
    sa.Column('address', sa.String(length=256), nullable=False, comment='Medical organization default address'),
    sa.Column('lang', sa.String(length=5), nullable=False, comment='Medical organization default language'),
    sa.Column('name_locales', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment="Medical organization's name additional locales"),
    sa.Column('address_locales', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment="Medical organization's address additional locales"),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cat_medical_organizations')),
    sa.UniqueConstraint('code', name=op.f('uq_cat_medical_organizations_code')),
    sa.UniqueConstraint('name', name=op.f('uq_cat_medical_organizations_name'))
    )
    op.create_table('cat_nationalities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Nationality default name'),
    sa.Column('lang', sa.String(length=5), nullable=False, comment='Nationality default language'),
    sa.Column('name_locales', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment="Nationality's name additional locales"),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cat_nationalities'))
    )
    op.create_table('cat_patient_context_attributes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Patient context attribute default name'),
    sa.Column('lang', sa.String(length=5), nullable=False, comment='Patient context attribute default language'),
    sa.Column('name_locales', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment="Patient context attribute's name additional locales"),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cat_patient_context_attributes'))
    )
    op.create_table('platform_rules',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('rule_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_platform_rules'))
    )
    op.create_table('users',
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('middle_name', sa.String(length=100), nullable=True),
    sa.Column('full_name', sa.String(length=256), nullable=True),
    sa.Column('iin', sa.String(length=12), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('client_roles', postgresql.JSONB(astext_type=sa.Text()), server_default='[]', nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('specializations', postgresql.JSONB(astext_type=sa.Text()), server_default='[]', nullable=False),
    sa.Column('attachment_data', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=False),
    sa.Column('served_patient_types', postgresql.JSONB(astext_type=sa.Text()), server_default='[]', nullable=False),
    sa.Column('served_referral_types', postgresql.JSONB(astext_type=sa.Text()), server_default='[]', nullable=False),
    sa.Column('served_referral_origins', postgresql.JSONB(astext_type=sa.Text()), server_default='[]', nullable=False),
    sa.Column('served_payment_types', postgresql.JSONB(astext_type=sa.Text()), server_default='[]', nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('iin', name=op.f('uq_users_iin'))
    )
    op.create_table('patients',
    sa.Column('iin', sa.String(length=12), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('middle_name', sa.String(length=100), nullable=True),
    sa.Column('maiden_name', sa.String(length=100), nullable=True, comment="Patient's maiden name (девичья фамилия). The optional field."),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('gender', sa.Enum('male', 'female', 'not_specified', name='gender_enum'), server_default='not_specified', nullable=True, comment="Patient's gender. The optional field. Default is 'NOT_SPECIFIED'."),
    sa.Column('citizenship_id', sa.Integer(), nullable=False),
    sa.Column('nationality_id', sa.Integer(), nullable=False),
    sa.Column('social_status', sa.Enum('employed', 'unemployed', 'self_employed', 'student', 'retired', 'child', 'disabled', 'not_specified', name='social_status_enum'), server_default='not_specified', nullable=True, comment="Patient's social status. The optional field. Default is 'NOT_SPECIFIED'."),
    sa.Column('marital_status', sa.Enum('single', 'married', 'divorced', 'widowed', 'not_specified', name='marital_status_enum'), server_default='not_specified', nullable=True, comment="Patient's marital_status. The optional field. Default is 'NOT_SPECIFIED'."),
    sa.Column('attachment_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment="Patient's attachment data. The optional field."),
    sa.Column('relatives', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment="Patient's relatives as a list of objects. Each object should have: 'type' (relation type, e.g., 'mother', 'father', 'spouse'), 'full_name' (relative's full name), 'iin' (optional, relative's IIN), 'birth_date' (optional, ISO date string), 'phone' (optional), 'relation_comment' (optional, any additional info). Example: [{'type': 'mother', 'full_name': 'Ivanova Maria Petrovna', 'iin': '620514300101'}]. Field is optional, default is NULL."),
    sa.Column('addresses', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment="Patient's addresses as a list of objects. Each object should have: 'type' (address type, e.g., 'residence', 'registration'), 'value' (address string), 'is_primary' (boolean flag for main address). Example: [{'type': 'residence', 'value': 'Akmola Region, Kokshetau, Mamyshuly St, 60', 'is_primary': true}]. Field is optional, default is NULL."),
    sa.Column('contact_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment="Patient's contact information as a list of objects (phones, emails, etc.). Each object should have: 'type' (contact type, e.g., 'mobile', 'email', 'work'), 'value' (contact detail), 'is_primary' (boolean flag for main contact). Example: [{'type': 'mobile', 'value': '77774057759', 'is_primary': true}]. Field is optional, default is NULL."),
    sa.Column('profile_status', sa.Enum('active', 'archived', 'inactive', name='profile_status_enum'), server_default='active', nullable=True, comment="Patient's profile status. The optional field. Default is 'ACTIVE'."),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['citizenship_id'], ['cat_citizenship.id'], name=op.f('fk_patients_citizenship_id_cat_citizenship')),
    sa.ForeignKeyConstraint(['nationality_id'], ['cat_nationalities.id'], name=op.f('fk_patients_nationality_id_cat_nationalities')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_patients')),
    sa.UniqueConstraint('iin', name=op.f('uq_patients_iin'))
    )
    op.create_table('schedules',
    sa.Column('doctor_id', sa.UUID(), nullable=False),
    sa.Column('schedule_name', sa.String(length=20), nullable=False),
    sa.Column('period_start', sa.Date(), nullable=False),
    sa.Column('period_end', sa.Date(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('appointment_interval', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('appointment_interval >= 0 AND appointment_interval <= 60', name=op.f('ck_schedules_ck_appointment_interval_range')),
    sa.ForeignKeyConstraint(['doctor_id'], ['users.id'], name=op.f('fk_schedules_doctor_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_schedules'))
    )
    op.create_table('cat_insurance_info',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('policy_number', sa.String(length=50), nullable=True, comment='Insurance policy number'),
    sa.Column('company', sa.String(length=100), nullable=True, comment='Insurance company name'),
    sa.Column('valid_from', sa.Date(), nullable=True, comment='Insurance valid from'),
    sa.Column('valid_till', sa.Date(), nullable=True, comment='Insurance valid till'),
    sa.Column('comment', sa.String(length=256), nullable=True, comment='Insurance comment'),
    sa.Column('patient_id', sa.UUID(), nullable=False, comment='Insurance ID'),
    sa.Column('financing_source_id', sa.Integer(), nullable=False, comment='Financing source ID'),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['financing_source_id'], ['cat_financing_sources.id'], name=op.f('fk_cat_insurance_info_financing_source_id_cat_financing_sources')),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name=op.f('fk_cat_insurance_info_patient_id_patients')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cat_insurance_info'))
    )
    op.create_table('emergency_assets',
    sa.Column('bg_asset_id', sa.String(length=50), nullable=True),
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('patient_location_address', sa.Text(), nullable=True),
    sa.Column('is_not_attached_to_mo', sa.Boolean(), nullable=False),
    sa.Column('receive_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('receive_time', sa.Time(), nullable=False),
    sa.Column('actual_datetime', sa.DateTime(timezone=True), nullable=False),
    sa.Column('received_from', sa.String(length=255), nullable=False),
    sa.Column('is_repeat', sa.Boolean(), nullable=False),
    sa.Column('outcome', sa.Enum('HOSPITALIZED', 'TREATED_AT_HOME', 'REFUSED_TREATMENT', 'DEATH', 'TRANSFERRED', name='emergencyoutcomeenum'), nullable=True),
    sa.Column('diagnoses', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Список диагнозов в формате JSON'),
    sa.Column('diagnosis_note', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('REGISTERED', 'CONFIRMED', 'REFUSED', 'CANCELLED', name='assetstatusenum'), nullable=False),
    sa.Column('delivery_status', sa.Enum('RECEIVED_AUTOMATICALLY', 'PENDING_DELIVERY', 'DELIVERED', name='assetdeliverystatusenum'), nullable=False),
    sa.Column('reg_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('has_confirm', sa.Boolean(), nullable=False),
    sa.Column('has_files', sa.Boolean(), nullable=False),
    sa.Column('has_refusal', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name=op.f('fk_emergency_assets_patient_id_patients'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_emergency_assets')),
    sa.UniqueConstraint('bg_asset_id', name=op.f('uq_emergency_assets_bg_asset_id'))
    )
    op.create_table('newborn_assets',
    sa.Column('bg_asset_id', sa.String(length=50), nullable=True),
    sa.Column('patient_id', sa.UUID(), nullable=True),
    sa.Column('patient_full_name_if_not_registered', sa.String(length=255), nullable=True),
    sa.Column('receive_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('receive_time', sa.Time(), nullable=False),
    sa.Column('actual_datetime', sa.DateTime(timezone=True), nullable=False),
    sa.Column('received_from', sa.String(length=255), nullable=False),
    sa.Column('is_repeat', sa.Boolean(), nullable=False),
    sa.Column('mother_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Данные о матери в формате JSON'),
    sa.Column('newborn_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Данные о новорожденном в формате JSON'),
    sa.Column('diagnoses', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Список диагнозов в формате JSON'),
    sa.Column('diagnosis_note', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('REGISTERED', 'CONFIRMED', 'REFUSED', 'CANCELLED', name='assetstatusenum'), nullable=False),
    sa.Column('delivery_status', sa.Enum('RECEIVED_AUTOMATICALLY', 'PENDING_DELIVERY', 'DELIVERED', name='assetdeliverystatusenum'), nullable=False),
    sa.Column('reg_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('has_confirm', sa.Boolean(), nullable=False),
    sa.Column('has_files', sa.Boolean(), nullable=False),
    sa.Column('has_refusal', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name=op.f('fk_newborn_assets_patient_id_patients'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_newborn_assets')),
    sa.UniqueConstraint('bg_asset_id', name=op.f('uq_newborn_assets_bg_asset_id'))
    )
    op.create_table('patient_additional_attribute',
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('additional_attribute_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['additional_attribute_id'], ['cat_patient_context_attributes.id'], name=op.f('fk_patient_additional_attribute_additional_attribute_id_cat_patient_context_attributes'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name=op.f('fk_patient_additional_attribute_patient_id_patients'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('patient_id', 'additional_attribute_id', name=op.f('pk_patient_additional_attribute'))
    )
    op.create_table('patient_financing_source',
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('financing_source_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['financing_source_id'], ['cat_financing_sources.id'], name=op.f('fk_patient_financing_source_financing_source_id_cat_financing_sources'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name=op.f('fk_patient_financing_source_patient_id_patients'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('patient_id', 'financing_source_id', name=op.f('pk_patient_financing_source'))
    )
    op.create_table('patients_and_diagnoses',
    sa.Column('date_diagnosed', sa.Date(), nullable=True),
    sa.Column('comment', sa.String(length=256), nullable=True),
    sa.Column('diagnosis_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('doctor_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['diagnosis_id'], ['cat_diagnoses.id'], name=op.f('fk_patients_and_diagnoses_diagnosis_id_cat_diagnoses')),
    sa.ForeignKeyConstraint(['doctor_id'], ['users.id'], name=op.f('fk_patients_and_diagnoses_doctor_id_users')),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name=op.f('fk_patients_and_diagnoses_patient_id_patients')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_patients_and_diagnoses'))
    )
    op.create_table('schedule_days',
    sa.Column('schedule_id', sa.UUID(), nullable=False),
    sa.Column('day_of_week', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('work_start_time', sa.Time(), nullable=False),
    sa.Column('work_end_time', sa.Time(), nullable=False),
    sa.Column('break_start_time', sa.Time(), nullable=True),
    sa.Column('break_end_time', sa.Time(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('day_of_week BETWEEN 1 AND 7', name=op.f('ck_schedule_days_ck_schedule_days_day_of_week')),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedules.id'], name=op.f('fk_schedule_days_schedule_id_schedules'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_schedule_days'))
    )
    op.create_table('stationary_assets',
    sa.Column('bg_asset_id', sa.String(length=50), nullable=True),
    sa.Column('card_number', sa.String(length=50), nullable=True),
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('receive_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('receive_time', sa.Time(), nullable=False),
    sa.Column('actual_datetime', sa.DateTime(timezone=True), nullable=False),
    sa.Column('received_from', sa.String(length=255), nullable=False),
    sa.Column('is_repeat', sa.Boolean(), nullable=False),
    sa.Column('stay_period_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('stay_period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('stay_outcome', sa.String(length=255), nullable=True),
    sa.Column('diagnosis', sa.Text(), nullable=False),
    sa.Column('area', sa.String(length=255), nullable=False),
    sa.Column('specialization', sa.String(length=255), nullable=True),
    sa.Column('specialist', sa.String(length=255), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('REGISTERED', 'CONFIRMED', 'REFUSED', 'CANCELLED', name='assetstatusenum'), nullable=False),
    sa.Column('delivery_status', sa.Enum('RECEIVED_AUTOMATICALLY', 'PENDING_DELIVERY', 'DELIVERED', name='assetdeliverystatusenum'), nullable=False),
    sa.Column('reg_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('has_confirm', sa.Boolean(), nullable=False),
    sa.Column('has_files', sa.Boolean(), nullable=False),
    sa.Column('has_refusal', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name=op.f('fk_stationary_assets_patient_id_patients'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_stationary_assets')),
    sa.UniqueConstraint('bg_asset_id', name=op.f('uq_stationary_assets_bg_asset_id'))
    )
    op.create_table('appointments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('time', sa.Time(), nullable=False),
    sa.Column('patient_id', sa.UUID(), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('address', sa.String(length=256), nullable=True),
    sa.Column('status', sa.Enum('free', 'booked', 'cancelled', 'appointment', name='appointment_status_enum'), nullable=False, comment='Appointment status'),
    sa.Column('type', sa.Enum('INITIAL', 'REVISIT', 'CONSULTATION', name='appointmenttypeenum'), nullable=True),
    sa.Column('financing_sources_ids', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('additional_services', postgresql.JSONB(astext_type=sa.Text()), server_default='[]', nullable=True),
    sa.Column('schedule_day_id', sa.UUID(), nullable=False),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name=op.f('fk_appointments_patient_id_patients'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['schedule_day_id'], ['schedule_days.id'], name=op.f('fk_appointments_schedule_day_id_schedule_days'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_appointments'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('appointments')
    op.drop_table('stationary_assets')
    op.drop_table('schedule_days')
    op.drop_table('patients_and_diagnoses')
    op.drop_table('patient_financing_source')
    op.drop_table('patient_additional_attribute')
    op.drop_table('newborn_assets')
    op.drop_table('emergency_assets')
    op.drop_table('cat_insurance_info')
    op.drop_table('schedules')
    op.drop_table('patients')
    op.drop_table('users')
    op.drop_table('platform_rules')
    op.drop_table('cat_patient_context_attributes')
    op.drop_table('cat_nationalities')
    op.drop_table('cat_medical_organizations')
    op.drop_table('cat_financing_sources')
    op.drop_table('cat_diagnoses')
    op.drop_table('cat_citizenship')
    # ### end Alembic commands ###
