"""empty message

Revision ID: e368b8fb6b37
Revises: 91d030781a7d
Create Date: 2025-07-15 05:44:52.964491

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e368b8fb6b37'
down_revision: Union[str, None] = '91d030781a7d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('emergency_assets',
    sa.Column('bg_asset_id', sa.String(length=50), nullable=True),
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('patient_location_address', sa.Text(), nullable=True),
    sa.Column('is_not_attached_to_mo', sa.Boolean(), nullable=False),
    sa.Column('receive_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('receive_time', sa.Time(), nullable=False),
    sa.Column('actual_datetime', sa.DateTime(timezone=True), nullable=False),
    sa.Column('received_from', sa.String(length=255), nullable=False),
    sa.Column('is_repeat', sa.Boolean(), nullable=False),
    sa.Column('outcome', sa.Enum('HOSPITALIZED', 'TREATED_AT_HOME', 'REFUSED_TREATMENT', 'DEATH', 'TRANSFERRED', name='emergencyoutcomeenum'), nullable=True),
    sa.Column('diagnoses', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Список диагнозов в формате JSON'),
    sa.Column('diagnosis_note', sa.Text(), nullable=True),
    sa.Column('reg_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('has_confirm', sa.Boolean(), nullable=False),
    sa.Column('has_files', sa.Boolean(), nullable=False),
    sa.Column('has_refusal', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name=op.f('fk_emergency_assets_patient_id_patients'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_emergency_assets')),
    sa.UniqueConstraint('bg_asset_id', name=op.f('uq_emergency_assets_bg_asset_id'))
    )
    op.create_table('newborn_assets',
    sa.Column('bg_asset_id', sa.String(length=50), nullable=True),
    sa.Column('patient_id', sa.UUID(), nullable=True),
    sa.Column('patient_full_name_if_not_registered', sa.String(length=255), nullable=True),
    sa.Column('receive_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('receive_time', sa.Time(), nullable=False),
    sa.Column('actual_datetime', sa.DateTime(timezone=True), nullable=False),
    sa.Column('received_from', sa.String(length=255), nullable=False),
    sa.Column('is_repeat', sa.Boolean(), nullable=False),
    sa.Column('mother_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Данные о матери в формате JSON'),
    sa.Column('newborn_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Данные о новорожденном в формате JSON'),
    sa.Column('diagnoses', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Список диагнозов в формате JSON'),
    sa.Column('diagnosis_note', sa.Text(), nullable=True),
    sa.Column('reg_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('has_confirm', sa.Boolean(), nullable=False),
    sa.Column('has_files', sa.Boolean(), nullable=False),
    sa.Column('has_refusal', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name=op.f('fk_newborn_assets_patient_id_patients'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_newborn_assets')),
    sa.UniqueConstraint('bg_asset_id', name=op.f('uq_newborn_assets_bg_asset_id'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('newborn_assets')
    op.drop_table('emergency_assets')
    # ### end Alembic commands ###
