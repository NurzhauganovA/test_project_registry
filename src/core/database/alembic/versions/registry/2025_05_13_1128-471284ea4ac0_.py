"""empty message

Revision ID: 471284ea4ac0
Revises: 86de0b4585a2
Create Date: 2025-05-13 11:28:56.736400

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "471284ea4ac0"
down_revision: Union[str, None] = "86de0b4585a2"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("first_name", sa.String(length=100), nullable=False),
        sa.Column("last_name", sa.String(length=100), nullable=False),
        sa.Column("middle_name", sa.String(length=100), nullable=True),
        sa.Column("iin", sa.String(length=12), nullable=False),
        sa.Column("date_of_birth", sa.Date(), nullable=False),
        sa.Column(
            "client_roles",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default="[]",
            nullable=False,
        ),
        sa.Column("enabled", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "changed_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("iin", name=op.f("uq_users_iin")),
    )
    op.alter_column(
        "schedules",
        "doctor_id",
        existing_type=sa.String(length=50),
        type_=postgresql.UUID(),
        postgresql_using="doctor_id::uuid",
    )
    op.alter_column(
        "appointments",
        "patient_id",
        existing_type=sa.String(length=50),
        type_=postgresql.UUID(),
        postgresql_using="patient_id::uuid",
    )
    op.create_foreign_key(
        op.f("fk_appointments_patient_id_users"),
        "appointments",
        "users",
        ["patient_id"],
        ["id"],
        ondelete="RESTRICT",
    )
    op.create_foreign_key(
        op.f("fk_schedules_doctor_id_users"),
        "schedules",
        "users",
        ["doctor_id"],
        ["id"],
        ondelete="RESTRICT",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f("fk_schedules_doctor_id_users"), "schedules", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_appointments_patient_id_users"), "appointments", type_="foreignkey"
    )
    op.drop_table("users")
    # ### end Alembic commands ###
